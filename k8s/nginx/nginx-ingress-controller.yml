# Ingress Controller Service
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-controller
spec:
  selector:
    app: nginx-ingress-controller
  type: NodePort
  ports:
    - name: http
      nodePort: 32100  # 외부에서 접근할 NodePort
      port: 90  # 서비스 내부 포트 (HTTP 요청을 받을 nginx.conf 포트)
      targetPort: 90  # Nginx 컨테이너의 포트로 요청을 전달
      protocol: TCP
    # - name: https
    #   port: 433  # 서비스 내부 포트 (HTTPS 요청을 받을 포트)
    #   targetPort: 443  # Nginx 컨테이너의 포트로 요청을 전달
    #   nodePort: 30443  # 외부에서 접근할 HTTPS NodePort
    #   protocol: TCP
---
# Ingress Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  labels:
    app: nginx-ingress-controller
spec:
  replicas: 1 # 복제본 수 정의
  selector:
    matchLabels:
      app: nginx-ingress-controller
  template:
    metadata:
      labels:
        app: nginx-ingress-controller
    spec:
      containers:
        - name: nginx-ingress-controller
          image: nginx:1.14.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 90 # 컨테이너가 리스닝 중인 포트
            - containerPort: 443
          volumeMounts:
            - name: config
              mountPath: /etc/nginx # Pod 내부의 볼륨 경로
      volumes:
        - name: config
          hostPath:
            path: /Users/luke/Projects/k8s-docker/k8s/nginx/config # 나의 로컬 볼륨 경로
            type: Directory
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /  # 클라이언트가 요청한 URL의 경로 부분을 재작성하여 백엔드 서비스에 전달
spec:
  rules:
  - host: my-app.local  # 도메인 호스트 설정
    http:
      paths:
      - path: /myapp  # /myapp 경로에 대한 요청을 처리
        pathType: Prefix
        backend:
          service:
            name: my-app  # 트래픽을 라우팅할 서비스 이름
            port:
              number: 90  # 서비스의 포트 (Ingress Controller 포트)
